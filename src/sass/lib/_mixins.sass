=s($sprite)
	+sprite($sprite)
=sr($sprite)
	+spriter($sprite)
// width

// height
=rh($height)
	@media only screen and (max-height: $height + "px")
		@content

=fs($sizeValue: 16)
	font-size: $sizeValue + px
	font-size: $sizeValue / 10 + rem

=text-overflow
	overflow: hidden
	-ms-text-overflow: ellipsis
	text-overflow: ellipsis
	white-space: nowrap

=ie
	*display: inline
	*zoom: 1

%pseudo
	position: relative
	&:before,&:after
		content: ' '
		position: absolute
		top: 0
		left: 0
=pseudo
	@extend %pseudo

=coverdiv
	position: absolute
	top: 0
	left: 0
	width: 100%
	height: 100%    
	
=cover
	background-repeat: no-repeat
	background-size: cover
	background-position: 50% 50%
	
// retina, also available as +hdpi
=retina
	@media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2)
		@content

=box
	box-sizing: border-box

// vertical-align at center
=vcenter
	position: absolute
	top: 50%
	left: 50%
	transform: translate(-50%,-50%)  
	
//simple gradient
=g($color1, $color2)
	background-image: linear-gradient($color1, $color2)
=g3($color1, $color2, $color3)
	background-image: linear-gradient($color1, $color2, $color3)
=gh($color1, $color2)
	background-image: linear-gradient(left, $color1, $color2)

//asdfast font-family
=font($alias, $name)
	@font-face
		font-family: $alias
		src: url("../fonts/" + $name + ".eot")
		src: url("../fonts/" + $name + ".eot?#iefix") format("embedded-opentype"), url("../fonts/" + $name + ".woff") format("woff"), url("../fonts/" + $name + ".ttf") format("truetype")
		font-weight: normal
		font-style: normal
// usage: 
//+font(black, cytiapro-black-webfont)

// ROTATE
=rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0)
	transform: rotate($deg + deg)

// TRANSITION
=transition($what)
	transition: $what

=tr($what)
	+transition($what)

=hide-text
	font: 0/0 a
	text-shadow: none
	color: transparent

=hidetext
	+hide-text

=justify
	text-align: justify
	line-height: 0
	font-size: 0
	text-justify: newspaper
	zoom: 1
	text-align-last: justify
	&:after
		content: ""
		display: inline-block
		width: 100%
		height: 0px
		visibility: hidden
		overflow: hidden
=vertical
	text-align: center
	font-size: 0
	&:before
		content: ""
		display: inline-block
		vertical-align: middle
		width: 0
		height: 100% 

=clr
	&:after
		content: " "
		display: table
		clear: both
	*zoom: 1

=placeholder-color($color)
	&:-moz-placeholder,
	&::-moz-placeholder
		color: $color
		opacity: 1
	&::-webkit-input-placeholder
		color: $color

=placeholder
	&:-ms-input-placeholder
		@content
	&:-moz-placeholder
		@content
	&::-moz-placeholder
		@content
	&::-webkit-input-placeholder
		@content
	&::placeholder
		@content

=gray
	filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='matrix' values='0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0'/></filter></svg>#grayscale")
	// Firefox 10+
	filter: gray
	// IE6-9
	-webkit-filter: grayscale(100%)
	// Chrome 19+ & Safari 6+
	filter: progid:DXImageTransform.Microsoft.BasicImage(grayScale=1)
	-ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(grayScale=1)"

=gray-half
	filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='saturate' values='0.5'/></filter></svg>#grayscale")
	// Firefox 10+
	filter: gray alpha(opacity = 50)
	// IE6-9
	-webkit-filter: grayscale(50%)
	// Chrome 19+ & Safari 6+

=gray-zero
	filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='matrix' values='1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0'/></filter></svg>#grayscale")
	-webkit-filter: grayscale(0%)

=unselectable
	user-select: none

=nosel
	+unselectable

=prevent-text
	-ms-word-break: break-all
	word-break: break-all
	word-break: break-word
	-webkit-hyphens: auto
	-moz-hyphens: auto
	hyphens: auto

=font-smoothing($val: antialiased)
	-webkit-font-smoothing: $val
	-moz-font-smoothing: $val
	-ms-font-smoothing: $val
	-o-font-smoothing: $val

=selection
	& ::selection
		@content
	& ::-moz-selection
		@content
=sel
	+selection

=gpu
	transform: translate3d(0, 0, 0)

=smooth-triangle
	transform: rotate(0.05deg)

=scrollbar
	&::-webkit-scrollbar
		@content

=scrollbar-track
	&::-webkit-scrollbar-track
		@content

=scrollbar-thumb
	&::-webkit-scrollbar-thumb
		@content

=scrollbar-track-piece
	&::-webkit-scrollbar-track-piece
		@content

//triangle
=arr($width, $height, $bg, $direction)
	width: 0px
	height: 0px
	border-style: solid
	@if $direction == t
		border-width: 0 $width / 2 + rem $height + rem $width / 2 + rem
		border-color: transparent transparent $bg transparent
	@if $direction == r
		border-width: $height / 2 + rem 0 $height / 2 + rem $width + rem
		border-color: transparent transparent transparent $bg
	@if $direction == b
		border-width: $height + rem $width / 2 + rem 0 $width / 2 + rem
		border-color: $bg transparent transparent transparent
	@if $direction == l
		border-width: $height / 2 + rem $width + rem $height / 2 + rem 0
		border-color: transparent $bg transparent transparent
	@if $direction == tl
		border-width: $height + rem $width + rem 0 0
		border-color: $bg transparent transparent transparent
	@if $direction == tr
		border-width: 0 $width + rem $height + rem 0
		border-color: transparent $bg transparent transparent
	@if $direction == br
		border-width: 0 0 $height + rem $width + rem
		border-color: transparent transparent $bg transparent
	@if $direction == bl
		border-width: $width + rem 0 0 $height + rem
		border-color: transparent transparent transparent $bg
// example
// +arr(500,50, #000, l)
// +arr(500,50, #000, bl)

=rotate($var)
	transform: rotate($var+deg)
	
=blur($var)
	filter: blur($var)
=scale($var)
	transform: scale($var)
	
=svg($name, $width, $height)
	background: url("../img/svg/#{$name}.svg") no-repeat 0 0
	//background-image: inline-image('icons/svg/'+$sprite+'.svg','image/svg'); // to switches sprites to base64, elegant
	background-size: #{$width}rem #{$height}rem
	width: #{$width}rem
	height: #{$height}rem
	display: inline-block
=svgi($name)
	background: url("../img/svg/#{$name}.svg") no-repeat 0 0